# ──────────────────────────────────────────────────────────────
# 🌐 UPSTREAM BLOCK
# ──────────────────────────────────────────────────────────────
upstream backend {
    server nodejs1:3000;
    server nodejs2:3000;
}
# ──────────────────────────────────────────────────────────────
# 🌐 SERVER BLOCK
# ──────────────────────────────────────────────────────────────
server {
    listen 80;                          # Listen for incoming HTTP requests on port 80
    server_name 192.168.56.10;
    charset utf-8;                      # Set charset for text-based responses

# 🔧 Error page config (for upstream errors)
    error_page 502 503 504 /custom_50x.html;

    # Serve the custom error page
    location = /custom_50x.html {
        root /etc/nginx/conf.d;  # You can customize this path
        internal;                    # Prevent direct access
    }
    
    # 🚀 Serve static files directly (no need to hit Node.js)
    # location /static/ {
    #     alias /app/public/;  # 🗂️ Maps /static/* to files inside /app/public/*
    #     autoindex off;       # 🚫 Don’t show directory listings
    #     expires 30d;         # 📅 Cache static content in browser for 30 days
    #     add_header Cache-Control "public, max-age=2592000";
    # }

    # Main location block handling all incoming requests
    location / {
        # ── 🔁 BACKEND PROXY CONFIG ──
        proxy_pass http://backend;          # Forward to backend Node.js app
        proxy_http_version 1.1;                        # Use HTTP/1.1 for keep-alive & WebSockets

        # Forward original request headers for transparency and WebSocket support
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ──────────────────────────────────────────────────────────────
    # 🗜️ GZIP COMPRESSION
    # ──────────────────────────────────────────────────────────────
    gzip on;                            # Enable gzip compression
    gzip_min_length 256;               # Only compress responses > 256 bytes
    gzip_types                          # MIME types eligible for compression
        text/plain
        text/css
        text/javascript
        application/javascript
        application/json
        application/ld+json
        application/xml
        application/xml+rss
        text/xml;
}
